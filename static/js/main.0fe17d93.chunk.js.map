{"version":3,"sources":["firebase.js","components/auth/Login.js","features/userSlice.js","components/Header.js","components/Sidebar.js","features/replySlice.js","components/MailCard.js","components/Mail.js","components/Widget.js","components/Gmail.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","db","firestore","Login","useState","localStorage","getItem","email","setEmail","password","setPassword","loading","setLoading","handleSignIn","signInWithPopup","then","alert","catch","e","message","register","setRegister","className","src","alt","value","required","onChange","target","type","placeholder","onClick","preventDefault","setItem","createUserWithEmailAndPassword","signInWithEmailAndPassword","err","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Header","useSelector","style","cursor","window","confirm","signOut","Avatar","photo","Modal","setAppElement","Sidebar","modalOpen","setModalOpen","focus","setFocus","recipient","setRecipient","subject","setSubject","content","setContent","isOpen","onRequestClose","shouldCloseOnOverlayClick","overlay","width","height","backgroundColor","zIndex","top","left","marginTop","marginLeft","borderRadius","margin","padding","border","IconButton","collection","add","from","to","sent","timestamp","FieldValue","serverTimestamp","emailVerified","open","replySlice","mailId","setMailId","selectMailId","mail","useStyles","makeStyles","theme","root","heading","color","fontSize","typography","pxToRem","fontWeight","SimpleAccordion","key","Id","classes","forward","setForward","dispatch","useDispatch","repliedMails","setRepliedMails","fwdMails","setFwdMails","replied","setReplied","fwd","setFwd","useEffect","doc","orderBy","onSnapshot","snapshot","docs","map","id","fwdMail","data","reMail","addReply","console","log","addForward","forwarded","Accordion","AccordionSummary","aria-controls","CheckBox","Star","Typography","toString","split","trim","Date","toDate","toLocaleString","AccordionDetails","displayName","ReactHtmlParser","href","ReplyMails","paddingBottom","ForwardMails","MailCard","mails","setMails","setUserMail","show","setShow","welcome","setWelcome","length","Mail","Checkbox","Widget","Gmail","App","onAuthStateChanged","authUser","uid","photoURL","store","configureStore","reducer","userReducer","mailReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0fe17d93.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBcFRAK-gZGr3HywYjRNrqLtKZ2Ub2yNds\",\r\n  authDomain: \"fir-cab43.firebaseapp.com\",\r\n  projectId: \"fir-cab43\",\r\n  storageBucket: \"fir-cab43.appspot.com\",\r\n  messagingSenderId: \"377788020608\",\r\n  appId: \"1:377788020608:web:7affc48dec34c589b43365\",\r\n  measurementId: \"G-3610EWS85V\"\r\n};\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig)\r\n  const auth = firebase.auth()\r\n  const provider = new firebase.auth.GoogleAuthProvider()\r\n\r\n  const db = firebaseApp.firestore()\r\n\r\n  export {auth, provider}\r\n  export default db","import React, {useState } from 'react'\r\nimport './Login.css'\r\nimport {auth, provider} from '../../firebase'\r\n\r\nfunction Login() {\r\n\r\n    const [email, setEmail] = useState(localStorage.getItem('email') ? localStorage.getItem('email') : \"\")\r\n    const [password, setPassword] = useState(localStorage.getItem('password') ? localStorage.getItem('password') : \"\")\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const handleRegister = (e) => {\r\n        setLoading(false)\r\n        e.preventDefault()\r\n        localStorage.setItem('email', email)\r\n        localStorage.setItem('password', password)\r\n        if(email && password){\r\n            auth.createUserWithEmailAndPassword(email, password).then((auth) => {\r\n                setLoading(true)\r\n            alert('Registered successfully!!!')\r\n            //console.log(auth)\r\n        }).catch((e) => alert(e.message))\r\n        } else {\r\n            alert('Please fill all required field')\r\n        }\r\n        \r\n    }\r\n\r\n    const handleSignIn = () => {\r\n        setLoading(false)\r\n        auth.signInWithPopup(provider).then((auth) => {\r\n            setLoading(true)\r\n            alert('Signed in successfully')\r\n        }).catch((e) => alert(e.message))\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        localStorage.setItem('email', email)\r\n        localStorage.setItem('password', password)\r\n        if(email && password){\r\n            setLoading(false)\r\n            auth.signInWithEmailAndPassword(email, password).then((auth) => {\r\n                setLoading(true)\r\n            alert('Signed In successfully')\r\n            \r\n        }).catch((err) => alert(err.message))\r\n        } else{\r\n            alert('Please fill all required field')\r\n        }\r\n        \r\n    }\r\n    const[register, setRegister] = useState(false)\r\n\r\n    return (\r\n        <div className = \"login\">\r\n            {\r\n                loading ? (<>\r\n                {\r\n                register ? (<>\r\n                <div className = \"loginContainer\">\r\n                <div className = \"logo\">\r\n                    <img \r\n                        src=\"https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_dark_1x_r2.png\"\r\n                        alt = \"logo\"\r\n                    />\r\n                    <h3>Register </h3>\r\n                    <p>Create Account to continue with Gmail Clone</p>\r\n                </div>\r\n                <div className = \"loginContent\">\r\n                    <input \r\n                        value = {email}\r\n                        required = {true}\r\n                        onChange = {(e) => setEmail(e.target.value)}\r\n                        type = \"text\"\r\n                        placeholder = \"Email\"\r\n                    />\r\n                    <input \r\n                        value = {password}\r\n                        required = {true}\r\n                        onChange = {(e) => setPassword(e.target.value)}\r\n                        type = \"password\"\r\n                        placeholder = \"Password\"\r\n                    />\r\n                    <button type = 'submit' onClick = {handleRegister}>Register</button>\r\n                    <button onClick = {handleSignIn}>Continue using Google</button>\r\n                    \r\n                </div>     \r\n                <p onClick = {() => setRegister(false)}>Login?</p>\r\n            </div>\r\n                </>) : (<>\r\n                    <div className = \"loginContainer\">\r\n                <div className = \"logo\">\r\n                    <img \r\n                        src=\"https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_dark_1x_r2.png\"\r\n                        alt = \"logo\"\r\n                    />\r\n                    <h3>Sign in </h3>\r\n                    <p>to continue to Gmail Clone</p>\r\n                </div>\r\n                <div className = \"loginContent\">\r\n                    <input \r\n                        value = {email}\r\n                        onChange = {(e) => setEmail(e.target.value)}\r\n                        type = \"text\"\r\n                        placeholder = \"Email\"\r\n                    />\r\n                    <input \r\n                        value = {password}\r\n                        onChange = {(e) => setPassword(e.target.value)}\r\n                        type = \"password\"\r\n                        placeholder = \"Password\"\r\n                    />\r\n                    <button type = \"submit\" onClick = {handleLogin}>Login</button>\r\n                    <button onClick = {handleSignIn}>Continue using Google</button>\r\n                    \r\n                </div>     \r\n                <p onClick = {() => setRegister(true)}>Register?</p>\r\n            </div>\r\n                    </>) \r\n            }\r\n                </>) : (<>\r\n                    <div className = \"loading\">\r\n                        <img \r\n                        src = \"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/b6e0b072897469.5bf6e79950d23.gif\"\r\n                        alt = \"\"\r\n                    />\r\n                    <h1>Please Wait...</h1>\r\n                    </div>\r\n                    \r\n                </>)\r\n}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  user: null,\r\n};\r\n\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    login: (state,action) => {\r\n      state.user = action.payload\r\n    },\r\n    logout: (state) => {\r\n      state.user = null\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\nexport const selectUser = (state) => state.user.user\r\n\r\nexport default userSlice.reducer;\r\n","import React from 'react'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport DialpadOutlinedIcon from '@material-ui/icons/DialpadOutlined';\r\nimport { Avatar } from '@material-ui/core';\r\nimport './css/Header.css'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport { auth } from '../firebase';\r\n\r\nfunction Header() {\r\n\r\n    const user = useSelector(selectUser)\r\n    const handleLogout = () => {\r\n        if(window.confirm('Are you sure to logout?')){\r\n            auth.signOut()\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className = \"header\">\r\n            <div className = \"headerLeft\">\r\n                <MenuIcon />\r\n                <img src = \"https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_dark_1x_r2.png\" \r\n                alt = \"logo\"\r\n                />\r\n            </div>\r\n            <div className = \"headerMiddle\">\r\n                <div className = \"header__SearchContainer\">\r\n                    <SearchIcon />\r\n                    <input \r\n                        type = \"text\"\r\n                        placeholder = \"Search mail\"\r\n                    />\r\n                    <ArrowDropDownIcon />\r\n                </div>\r\n            </div>\r\n            <div className = \"headerRight\">\r\n                <div className = \"headerRightIcons\">\r\n                    <HelpOutlineOutlinedIcon />\r\n                    <SettingsOutlinedIcon />\r\n                    <DialpadOutlinedIcon /> </div>\r\n                    \r\n                    <div style = {{\r\n                        cursor: \"pointer\"\r\n                    }} onClick = {handleLogout} className = \"headerAvatar\"> \r\n                    <Avatar src = {user.photo}/>\r\n                    </div>\r\n                        \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport InboxOutlinedIcon from '@material-ui/icons/InboxOutlined';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport LabelImportantSharpIcon from '@material-ui/icons/LabelImportantSharp';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport './css/Sidebar.css'\r\nimport Modal from 'react-modal'\r\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport ScreenLockRotationIcon from '@material-ui/icons/ScreenLockRotation';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport db, { auth } from '../firebase';\r\nimport firebase from 'firebase'\r\n\r\nModal.setAppElement('#root')\r\n\r\nfunction Sidebar() {\r\n\r\n    const user = useSelector(selectUser)\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [focus, setFocus] = useState(false)\r\n\r\n    const [recipient, setRecipient] = useState(\"\")\r\n    const [subject, setSubject] = useState(\"\")\r\n    const [content, setContent] = useState(\"\")\r\n\r\n    const shareMeet = () => {\r\n        if(user.emailVerified){\r\n            window.open('https://meet.google.com/getalink?hs=202')\r\n        }\r\n        else {\r\n            alert('Please sign in using google account to access this feature')\r\n            if(window.confirm('Would you like to continue with google account')){\r\n            auth.signOut()\r\n        }\r\n    }\r\n}\r\n    const sendMail = (e) => {\r\n        e.preventDefault()\r\n\r\n        db.collection('sentMails').add({\r\n            from: user.email,\r\n            to: recipient,\r\n            subject: subject,\r\n            content: content,\r\n            user: user,\r\n            sent: true,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setModalOpen(false)\r\n        setContent(\"\")\r\n        setRecipient(\"\")\r\n        setSubject(\"\")\r\n        alert('Mail Sent Successfully...')\r\n    }\r\n\r\n    function openModal(){\r\n        setModalOpen(true)\r\n    }\r\n    function closeModal(){\r\n        setModalOpen(false)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        if(window.confirm('Are you sure to logout?')){\r\n            auth.signOut()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = \"sidebar\">\r\n            <div className = \"sidebarOptionsTop\">\r\n                <div \r\n                className = \"sidebarOption\">\r\n                    <img \r\n                        onClick = {openModal}\r\n                        src = \"https://www.gstatic.com/images/icons/material/colored_icons/1x/create_32dp.png\"\r\n                        alt = \"compose\"\r\n                    />\r\n                    <Modal\r\n                        isOpen={modalOpen}\r\n                        onRequestClose = {() => setModalOpen(false)}\r\n                        shouldCloseOnOverlayClick={false}\r\n                        style={{\r\n                        overlay: {\r\n                        width: 680,\r\n                        height: \"auto\",\r\n                        backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                        zIndex: \"1000\",\r\n                        top: \"50%\",\r\n                        left: \"50%\",\r\n                        marginTop: \"-250px\",\r\n                        marginLeft: \"-350px\",\r\n                        borderRadius: \"none\"\r\n                    },\r\n                    content: {\r\n                        margin: 0,\r\n                        padding: 0,\r\n                        border: \"none\"\r\n                    }\r\n                    }}\r\n              >\r\n                  <div className = \"modalContainer\">\r\n                      <div className = \"modalContainerTop\">\r\n                            <div className = \"modalHeader\">\r\n                      <p>New Message</p>\r\n                      <div \r\n                      className = \"modalHeaderIcons\">  \r\n                          <IconButton onClick = {closeModal}>\r\n                              <CloseIcon />\r\n                          </IconButton>\r\n                      </div>\r\n                  </div>\r\n                  <div onClick = {() => setFocus(true)} className = \"modalRecipient\">\r\n                      <p>{focus ? \"To\" : \"Recipients\"}</p>\r\n                      <input \r\n                        value = {recipient}\r\n                        onChange = {(e) => setRecipient(e.target.value)}\r\n                        type = \"text\"\r\n                      />\r\n                  </div>\r\n                  <div className = \"modalRecipient\">\r\n                      <input \r\n                        value = {subject}\r\n                        onChange = {(e) => setSubject(e.target.value)}\r\n                        type = \"text\"\r\n                        placeholder = \"Subject\"\r\n                      />\r\n                  </div>\r\n                  <div className = \"quill\">\r\n                      <ReactQuill \r\n                      value = {content}\r\n                      onChange = {(value) => setContent(value)}\r\n                      placeholder = \"Compose Your mail...\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n                    <div className = \"modalContainerBottom\">\r\n                        <div className = \"modalBottom\">\r\n                        <button onClick = {sendMail}>Send</button>\r\n                        <TextFormatIcon />\r\n                        <AttachFileIcon />\r\n                        <LinkIcon />\r\n                        <SentimentSatisfiedIcon />\r\n                        <PhotoIcon />\r\n                        <ScreenLockRotationIcon />\r\n                        <div className = \"modalBottomLast\">\r\n                            <MoreVertIcon />\r\n                            <DeleteIcon />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  \r\n                  </div>\r\n                  \r\n              </Modal>\r\n                </div>\r\n                <div className = \"sidebarOptionIcon\">\r\n                    <InboxOutlinedIcon />\r\n                </div>\r\n                <div className = \"sidebarOptionIcon\">\r\n                    <StarOutlinedIcon />\r\n                </div>\r\n                <div className = \"sidebarOptionIcon\">\r\n                    <WatchLaterIcon />\r\n                </div>\r\n                <div className = \"sidebarOptionIcon\">\r\n                    <SendIcon />\r\n                </div>\r\n                <div className = \"sidebarOptionIcon\">\r\n                    <InsertDriveFileIcon />\r\n                </div>\r\n                <div className = \"sidebarOptionIcon\">\r\n                    <LabelImportantSharpIcon />\r\n                </div>\r\n            </div>\r\n            <div className = \"sidebarOptionsBottom\">\r\n                <div className = \"sidebarOptions\">\r\n                    <div className = \"sidebarOptionIcon\">\r\n                        <img \r\n                            src = 'https://www.gstatic.com/images/icons/material/system/1x/meet_white_20dp.png'\r\n                            alt = \"meet\"\r\n                        />\r\n                    </div>\r\n                        <div onClick = {shareMeet} className = \"sidebarOptionIcon\">\r\n                        <VideocamIcon />\r\n                    </div>\r\n                    <div className = \"sidebarOptionIcon\">\r\n                        <KeyboardIcon />\r\n                    </div>\r\n            </div>\r\n            <div className = \"sidebarBottomLast\">\r\n                <div className = \"sidebarOptions\">\r\n                    <div className = \"sidebarOptionBottom\">\r\n                        <img \r\n                            src = \"https://www.gstatic.com/images/icons/material/system/1x/hangout_white_20dp.png\"\r\n                            alt = 'hangout'\r\n                        />\r\n                    </div>\r\n                    <div style = {{\r\n                        cursor: \"pointer\"\r\n                    }} onClick = {handleLogout} className = \"sidebarOption\">\r\n                        <Avatar\r\n                            src = {user.photo}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Sidebar\r\n","import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  mailId: null,\r\n};\r\n\r\n\r\nexport const replySlice = createSlice({\r\n  name: 'mail',\r\n  initialState,\r\n  reducers: {\r\n    setMailId: (state,action) => {\r\n      state.mailId = action.payload\r\n    },\r\n  },\r\n});\r\n\r\nexport const {setMailId } = replySlice.actions;\r\nexport const selectMailId = (state) => state.mail.mailId\r\n\r\nexport default replySlice.reducer;\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CheckBox, MoreVert, Star } from '@material-ui/icons';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\nimport './css/MailCard.css'\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport db from '../firebase';\r\nimport { selectUser } from '../features/userSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport Modal from 'react-modal'\r\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport ScreenLockRotationIcon from '@material-ui/icons/ScreenLockRotation';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { selectMailId, setMailId } from '../features/replySlice';\r\nimport firebase from 'firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    color: \"#fff\",\r\n    marginLeft: \"5px\",\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: 400,\r\n  },\r\n}));\r\n\r\nfunction SimpleAccordion({key,Id, mail}) {\r\n  const classes = useStyles();\r\n  //console.log(id, mail)\r\n\r\n  const user = useSelector(selectUser)\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [focus, setFocus] = useState(false)\r\n  const [forward, setForward] = useState(false)\r\n\r\n  const [recipient, setRecipient] = useState(mail.to)\r\n  const [subject, setSubject] = useState(mail.subject)\r\n  const [content, setContent] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n  const [repliedMails, setRepliedMails] = useState([])\r\n  const [fwdMails, setFwdMails] = useState([])\r\n  const [replied, setReplied] = useState(false)\r\n  const [fwd, setFwd] = useState(false)\r\n\r\n  const mailId = useSelector(selectMailId)\r\n\r\n  const sendMail = (id) => {\r\n    forward ?  addForward(id) : addReply(id) \r\n  }\r\n\r\n  useEffect(() => {\r\n    if(mailId?.mailId){\r\n      db.collection('sentMails').doc(mailId.mailId).collection('fowardedMails').orderBy('timestamp' ,'desc').onSnapshot((snapshot) => setFwdMails(snapshot.docs.map((doc) => ({id: doc.id, fwdMail: doc.data()}))))\r\n\r\n      setFwd(true)\r\n    }\r\n  }, [mailId])\r\n\r\n  useEffect(() => {\r\n    if(mailId?.mailId){\r\n      db.collection('sentMails').doc(mailId.mailId).collection('repliedMails').orderBy('timestamp', 'desc').onSnapshot((snapshot) => setRepliedMails(snapshot.docs.map((doc) => ({id: doc.id, reMail: doc.data()}))))\r\n\r\n      setReplied(true)\r\n    }\r\n    //console.log(repliedMails)\r\n  }, [mailId])\r\n\r\n  const addReply = (id) => {\r\n    console.log(id)\r\n    if(id.mailId){\r\n      db.collection('sentMails').doc(id.mailId).collection('repliedMails').add({\r\n        from : user.email,\r\n        to : recipient,\r\n        subject : `re<${subject}>`, \r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        content: content,\r\n        replied: true,\r\n        id: id,\r\n        user: user\r\n      })\r\n      alert('Mail replied successfully...')\r\n      setModalOpen(false)\r\n    }\r\n  }\r\n\r\n  const addForward = (id) => {\r\n    \r\n    console.log(id)\r\n    if(id){\r\n        db.collection('sentMails').doc(id.mailId).collection('fowardedMails').add({\r\n        from: user.email,\r\n        to: recipient,\r\n        subject: `fwd<${subject}>`,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        content: content,\r\n        forwarded: true,\r\n        id: id,\r\n        user: user\r\n      })\r\n      alert('Mail forwarded successfully...')\r\n      setModalOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleForward = () => {\r\n    setModalOpen(true)\r\n    setForward(true)\r\n  }\r\n\r\n  const handleReply = () => {\r\n    setModalOpen(true)\r\n    setForward(false)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion onClick = {() => dispatch(\r\n        setMailId({\r\n          mailId: Id\r\n        })\r\n      )} key = {key}>\r\n        <AccordionSummary\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n            \r\n            <div className = \"accordMid\">\r\n            <div className = \"accordLeft\">\r\n                <CheckBox />\r\n                <Star />\r\n                <Typography className={classes.heading}>{mail.user.email === user.email ? \"me\" : mail.from.toString().split('@')[0].trim()}</Typography>\r\n            </div>\r\n            <div className = \"accordMidMain\">\r\n                \r\n                <Typography className = {classes.heading}>\r\n                    {mail.subject}\r\n                </Typography>\r\n                <p className = {classes.heading}>Click Here to see Mail Content</p></div>\r\n                <div className = \"accordMidDate\">\r\n                <Typography className = {classes.heading}>{new Date(mail.timestamp?.toDate()).toLocaleString()}</Typography>\r\n            \r\n            </div>\r\n            \r\n            </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <div className = \"accordDetails\">\r\n            <div className = \"accordDetailsTop\">\r\n              <p>{mail.subject}</p>\r\n              <div className = \"accordDetailsTopRight\">\r\n                <PrintIcon />\r\n                <LaunchIcon />\r\n              </div>\r\n            </div>\r\n            \r\n              <div className = \"accordDetailsInfo\">\r\n                <Avatar \r\n                  src = {mail.user.photo}\r\n                />\r\n                <div className = \"sendersInfo\">\r\n                  <h4>{mail.user.displayName}<small>{mail.from}</small></h4>\r\n                  <small>{`To ${mail.to === user.email ? \"me\" : mail.to}`}</small>\r\n                </div>\r\n                <div className = \"sendersInfoDate\">\r\n                  <div className = \"sendersInfoDateOption\">\r\n                    <small>{new Date(mail.timestamp?.toDate()).toLocaleString()}</small>\r\n                    <Star />\r\n                    <ReplyIcon />\r\n                    <MoreVert />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className = \"mailContent\">\r\n                <div className = \"mailContentAccord\">\r\n                  {\r\n                      ReactHtmlParser(mail.content)\r\n                  }\r\n                </div>\r\n                <Modal\r\n                        isOpen={modalOpen}\r\n                        onRequestClose = {() => setModalOpen(false)}\r\n                        shouldCloseOnOverlayClick={false}\r\n                        style={{\r\n                        overlay: {\r\n                        width: 680,\r\n                        height: \"auto\",\r\n                        backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                        zIndex: \"1000\",\r\n                        top: \"50%\",\r\n                        left: \"50%\",\r\n                        marginTop: \"-250px\",\r\n                        marginLeft: \"-350px\",\r\n                        borderRadius: \"none\"\r\n                    },\r\n                    content: {\r\n                        margin: 0,\r\n                        padding: 0,\r\n                        border: \"none\"\r\n                    }\r\n                    }}\r\n              >\r\n                  <div className = \"modalContainer\">\r\n                      <div className = \"modalContainerTop\">\r\n                            <div className = \"modalHeader\">\r\n                      <p>{forward ? \"Forward\" : \"Reply\"}</p>\r\n                      <div \r\n                      className = \"modalHeaderIcons\">  \r\n                          <IconButton onClick = {() => setModalOpen(false)}>\r\n                              <CloseIcon />\r\n                          </IconButton>\r\n                      </div>\r\n                  </div>\r\n                  <div onClick = {() => setFocus(true)} className = \"modalRecipient\">\r\n                      <p>{focus ? \"To\" : \"Recipients\"}</p>\r\n                      <input\r\n                        required = {true} \r\n                        value = {recipient}\r\n                        onChange = {(e) => setRecipient(e.target.value)}\r\n                        type = \"text\"\r\n                      />\r\n                  </div>\r\n                  <div className = \"modalRecipient\">\r\n                      <input \r\n                        required = {true} \r\n                        value = {subject}\r\n                        onChange = {(e) => setSubject(e.target.value)}\r\n                        type = \"text\"\r\n                        placeholder = \"Subject\"\r\n                      />\r\n                  </div>\r\n                  <div className = \"quill\">\r\n                      <ReactQuill \r\n                      value = {content}\r\n                      onChange = {(value) => setContent(value)}\r\n                      placeholder = {forward ? \"Add content then forward mail...\" : \"Add reply to this mail...\"}\r\n                      />\r\n                  </div>\r\n                </div>\r\n                    <div className = \"modalContainerBottom\">\r\n                        <div className = \"modalBottom\">\r\n                        <button onClick = {(e) => sendMail(mailId)}>{forward ? \"Forward\" : \"Reply\"}</button>\r\n                        <TextFormatIcon />\r\n                        <AttachFileIcon />\r\n                        <LinkIcon />\r\n                        <SentimentSatisfiedIcon />\r\n                        <PhotoIcon />\r\n                        <ScreenLockRotationIcon />\r\n                        <div className = \"modalBottomLast\">\r\n                            <MoreVertIcon />\r\n                            <DeleteIcon />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  \r\n                  </div>\r\n                  \r\n              </Modal>{\r\n                replied &&  repliedMails.map(({id, reMail}) => (\r\n                    <ReplyMails key = {id} id = {id} mail = {reMail}/>\r\n                ))\r\n              \r\n              }\r\n\r\n              {\r\n                fwd && fwdMails.map(({id, fwdMail}) => (\r\n                  <ForwardMails key = {id} id = {id} mail = {fwdMail}/>\r\n                ))\r\n              }\r\n              \r\n              \r\n                <div className = \"mailReplyLinks\">\r\n                  \r\n                  <div onClick = {handleReply} className = \"mailReplyLink\">\r\n                    <ReplyIcon />\r\n                    <a  href = \"#\">Reply</a>\r\n                    \r\n                  </div>\r\n                  <div onClick = {handleForward} className = \"mailReplyLink\">\r\n                    <ForwardIcon />\r\n                    <a  href = \"#\">Forward</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ReplyMails = ({id, mail}) =>  {\r\n  console.log(id, mail)\r\n\r\n  const user = useSelector(selectUser)\r\n  return (<>\r\n  <div className = 'repliedMail'>\r\n                <div className = \"repliedMailContainer\">\r\n                  <div className = \"repliedMailTop\">\r\n                    <h5>{`<replied mail>`}</h5>\r\n                  </div>\r\n                  \r\n                  <div className = \"repliedMailMid\">\r\n                    <p style = {{\r\n                      margin: \"0px 10px\",\r\n                      paddingBottom: \"10px\",\r\n                      fontWeight: '500'\r\n                    \r\n                    }}>{mail.subject}</p>\r\n                        <div className = \"accordDetailsInfo\">\r\n                      <Avatar \r\n                        src = {mail.user.photo}\r\n                      />\r\n                      <div className = \"sendersInfo\">\r\n                      <h4>{mail.user.displayName}<small>{mail.from}</small></h4>\r\n                  <small>{`To ${mail.to === user.email ? \"me\" : mail.to}`}</small>\r\n                      </div>\r\n                      <div className = \"sendersInfoDate\">\r\n                        <div className = \"sendersInfoDateOption\">\r\n                          <small>{new Date(mail.timestamp?.toDate()).toLocaleString()}</small>\r\n                          <Star />\r\n                          <ReplyIcon />\r\n                          <MoreVert />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className = \"mailContent\">\r\n                              <div className = \"mailContentAccord\">\r\n                          {\r\n                              ReactHtmlParser(mail.content)\r\n                          }\r\n                        </div>\r\n                        </div>\r\n              </div>\r\n  </>)\r\n  \r\n}\r\n\r\nconst ForwardMails = ({id, mail}) => {\r\n  console.log(id, mail)\r\n\r\n  const user = useSelector(selectUser)\r\n  return (<>\r\n    <div className = 'repliedMail'>\r\n                <div className = \"repliedMailContainer\">\r\n                  <div className = \"repliedMailTop\">\r\n                    <h5>{`<forwarded mail>`}</h5>\r\n                  </div>\r\n                  <div className = \"repliedMailMid\">\r\n                        <div className = \"accordDetailsInfo\">\r\n                      <Avatar \r\n                        src = {mail.user.photo}\r\n                      />\r\n                      <div className = \"sendersInfo\">\r\n                      <h4>{mail.user.displayName}<small>{mail.from}</small></h4>\r\n                  <small>{`To ${mail.to === user.email ? \"me\" : mail.to}`}</small>\r\n                      </div>\r\n                      <div className = \"sendersInfoDate\">\r\n                        <div className = \"sendersInfoDateOption\">\r\n                          <small>{new Date(mail.timestamp?.toDate()).toLocaleString()}</small>\r\n                          <Star />\r\n                          <ReplyIcon />\r\n                          <MoreVert />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className = \"mailContent\">\r\n                              <div className = \"mailContentAccord\">\r\n                          {\r\n                              ReactHtmlParser(mail.content)\r\n                          }\r\n                        </div>\r\n                        </div>\r\n              </div>\r\n  </>)\r\n}\r\n\r\nfunction MailCard() {\r\n  const [mails, setMails] = useState([])\r\n  const [userMail, setUserMail]  = useState([])\r\n  const [show, setShow] = useState(false)\r\n  const [welcome, setWelcome] = useState(true)\r\n\r\n  const user = useSelector(selectUser)\r\n\r\n  useEffect(() => {\r\n    db.collection('sentMails').orderBy('timestamp', 'desc').onSnapshot((snapshot) => setMails(snapshot.docs.map((doc) => ({\r\n      id: doc.id,\r\n      mail: doc.data()\r\n    }))))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(mails.length !==0){\r\n      mails.map(({id, mail}) => {\r\n        if(user.email === mail.to || user.email === mail.from){\r\n              setUserMail(mail)\r\n              setShow(true)\r\n              setWelcome(false)\r\n          }\r\n      })\r\n    }\r\n  })\r\n\r\n  // console.log(userMail)\r\n\r\n    return (\r\n        <div className = \"mailCard\">\r\n          { show &&\r\n            mails.map(({id, mail}) => {\r\n              if(user.email === mail.to || user.email === mail.from){\r\n                return(<>{\r\n                     <SimpleAccordion key = {id} Id = {id} mail = {mail}/>\r\n                  }\r\n                  </>) \r\n              }\r\n                  \r\n            }  \r\n            )\r\n          }\r\n          {\r\n            welcome && <>\r\n              \r\n            </>\r\n          }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MailCard\r\n","import { Checkbox } from '@material-ui/core'\r\nimport { ArrowDropDown } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport './css/Mail.css'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport MailCard from './MailCard';\r\n\r\nfunction Mail() {\r\n    return (\r\n        <div className = \"mail\">\r\n            <div className = \"mail__containerTop\">\r\n            <div className = \"mailTop\">\r\n                <Checkbox className = \"checkbox\"/>\r\n                <ArrowDropDown />\r\n                <RefreshIcon />\r\n                <MoreVertIcon />\r\n            </div>  \r\n            <div className = \"mailTopRight\">\r\n                <ChevronLeftIcon />\r\n                <ChevronRightIcon />\r\n                <KeyboardIcon />\r\n                <ArrowDropDown />\r\n            </div>\r\n            </div>\r\n            <div className = \"mail__containerMid\">\r\n                <div className = \"mail__containerMidOptions\">\r\n                    <div className = \"mail__containerMidOption\">\r\n                        <InboxIcon />\r\n                        <h3>Primary</h3>\r\n                    </div>\r\n                    <div className = \"mail__containerMidOption\">\r\n                        <PeopleAltIcon />\r\n                        <h3>Social</h3>\r\n                    </div>\r\n                    <div className = \"mail__containerMidOption\">\r\n                        <LocalOfferIcon />\r\n                        <h3>Promotions</h3>\r\n                    </div>\r\n                    <div className = \"mail__containerMidOption\">\r\n                        <InfoIcon />\r\n                        <h3>Updates</h3>\r\n                    </div>\r\n                    <div className = \"mail__containerMidOption\">\r\n                        <ForumIcon />\r\n                        <h3>Forums</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className = \"mail__containerMain\">\r\n                <div className = \"mail__containerMainCards\">\r\n                    <MailCard />\r\n                </div>\r\n            </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Mail\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from '../features/userSlice'\r\nimport { auth } from '../firebase'\r\nimport './css/Widget.css'\r\n\r\nfunction Widget() {\r\n\r\n    const user = useSelector(selectUser)\r\n    const handleClickCalender = () => {\r\n        if(user.emailVerified){\r\n            window.open('https://calendar.google.com', '_blank', 'noopener noreferrer')\r\n        }\r\n        else {\r\n            alert('Please sign in using google account to access this feature')\r\n            if(window.confirm('Would you like to continue with google account')){\r\n                auth.signOut()\r\n        }\r\n            \r\n    }\r\n           \r\n} \r\n\r\nconst handleClickKeep = () => {\r\n    if(user.emailVerified){\r\n        window.open('https://keep.google.com', '_blank', 'noopener noreferrer')\r\n    }\r\n    else {\r\n        alert('Please sign in using google account to access this feature')\r\n        if(window.confirm('Would you like to continue with google account')){\r\n            auth.signOut()\r\n    }\r\n        \r\n}\r\n\r\n}\r\n\r\nconst handleClickTasks = () => {\r\n    if(user.emailVerified){\r\n        window.open('https://tasksboard.app', '_blank', 'noopener noreferrer')\r\n    }\r\n    else {\r\n        alert('Please sign in using google account to access this feature')\r\n        if(window.confirm('Would you like to continue with google account')){\r\n            auth.signOut()\r\n    }\r\n        \r\n}\r\n\r\n}\r\n\r\nconst handleClickContacts = () => {\r\n    if(user.emailVerified){\r\n        window.open('https://contacts.google.com', '_blank', 'noopener noreferrer')\r\n    }\r\n    else {\r\n        alert('Please sign in using google account to access this feature')\r\n        if(window.confirm('Would you like to continue with google account')){\r\n            auth.signOut()\r\n    }\r\n        \r\n}\r\n       \r\n} \r\n    return (\r\n        <div className = \"widget\">\r\n            <div className = \"widgetOptions\">\r\n                    <img \r\n                    onClick = {handleClickCalender}\r\n                    src = \"https://www.gstatic.com/companion/icon_assets/calendar_2020q4_2x.png\"\r\n                    alt = \"calender\"\r\n                />\r\n                </div>\r\n                <div className = \"widgetOptions\">\r\n                <img \r\n                    onClick = {handleClickKeep}\r\n                    src = \"https://www.gstatic.com/companion/icon_assets/keep_2020q4v3_2x.png\"\r\n                    alt = \"calender\"\r\n                />\r\n                </div>\r\n                <div className = \"widgetOptions\">\r\n                <img \r\n                    onClick = {handleClickTasks}\r\n                    src = \"https://www.gstatic.com/companion/icon_assets/tasks2_2x.png\"\r\n                    alt = \"tasks\"\r\n                />\r\n                </div>\r\n                <div className = \"widgetOptions\">\r\n                <img \r\n                    onClick = {handleClickContacts}\r\n                    src = \"https://www.gstatic.com/companion/icon_assets/contacts_2x.png\"\r\n                    alt = \"contacts\"\r\n                />\r\n                </div>\r\n                <hr />\r\n                <div className = \"widgetOptions\">\r\n                <img \r\n                    \r\n                    src = \"https://www.gstatic.com/images/icons/material/system/1x/add_white_24dp.png\"\r\n                    alt = \"add\"\r\n                />\r\n                </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widget\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Sidebar from './Sidebar'\r\nimport './css/Gmail.css'\r\nimport Mail from './Mail'\r\nimport Widget from './Widget'\r\n\r\nfunction Gmail() {\r\n    return (\r\n        <div className = \"gmail\">\r\n            <Header />\r\n            <div className = \"gmailOptions\">\r\n                <Sidebar />\r\n                <Mail />\r\n                <Widget />\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gmail\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport Login from './components/auth/Login';\r\nimport Gmail from './components/Gmail';\r\nimport { login, logout, selectUser } from './features/userSlice';\r\nimport {auth} from './firebase'\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n    if(authUser){\r\n      dispatch(login({\r\n        uid: authUser.uid,\r\n        email: authUser.email,\r\n        displayName: authUser.displayName ? authUser.displayName : authUser.email.toString().split(\"@\")[0].trim(),\r\n        photo: authUser.photoURL ? authUser.photoURL : \"https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png\",\r\n        emailVerified: authUser.emailVerified\r\n      }  \r\n      ))\r\n      console.log(authUser)\r\n    } else {\r\n      dispatch(logout())\r\n    }\r\n  })\r\n  }, [dispatch])\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        user ? (<Gmail />) : (<Login />)\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice'\r\nimport mailReducer from '../features/replySlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    mail: mailReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}